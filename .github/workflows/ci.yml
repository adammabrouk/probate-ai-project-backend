name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  build_devcontainer:
    name: Build & Push Devcontainer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push devcontainer
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainer/Dockerfile
          tags: ghcr.io/${{ github.repository }}/devcontainer:latest
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: build_devcontainer
    container:
      image: ghcr.io/${{ github.repository }}/devcontainer:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run linters
        run: |
          poetry install
          poetry run black --check .
          poetry run isort --check-only .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build_devcontainer
    container:
      image: ghcr.io/${{ github.repository }}/devcontainer:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: |
          poetry install
          poetry run pytest
